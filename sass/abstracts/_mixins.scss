// ==========================================================================
// Mixins
// ==========================================================================

// Media Queries
// --------------------------------------------------------------------------
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: #{$breakpoint-xs}) {
      @content;
    }
  }
  @else if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  }
  @else if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  }
  @else if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  }
  @else if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  }
  @else if $breakpoint == xxl {
    @media (min-width: #{$breakpoint-xxl}) {
      @content;
    }
  }
}

// Flexbox utilities
// --------------------------------------------------------------------------
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

// Grid utilities
// --------------------------------------------------------------------------
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-columns($columns, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Positioning
// --------------------------------------------------------------------------
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Typography
// --------------------------------------------------------------------------
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-gradient($color1, $color2) {
  background: linear-gradient(45deg, $color1, $color2);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// Buttons
// --------------------------------------------------------------------------
@mixin button-variant($bg-color, $text-color: $color-white) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid $bg-color;
  transition: all $transition-base;

  &:hover {
    background-color: darken($bg-color, 10%);
    border-color: darken($bg-color, 10%);
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin button-outline($border-color, $text-color: $border-color) {
  background-color: transparent;
  color: $text-color;
  border: 2px solid $border-color;
  transition: all $transition-base;

  &:hover {
    background-color: $border-color;
    color: $color-white;
    transform: translateY(-2px);
  }

  &:active {
    transform: translateY(0);
  }
}

// Cards and containers
// --------------------------------------------------------------------------
@mixin card-shadow($level: md) {
  @if $level == sm {
    box-shadow: $shadow-sm;
  }
  @else if $level == md {
    box-shadow: $shadow-md;
  }
  @else if $level == lg {
    box-shadow: $shadow-lg;
  }
  @else if $level == xl {
    box-shadow: $shadow-xl;
  }

  transition: box-shadow $transition-base;

  &:hover {
    @if $level == sm {
      box-shadow: $shadow-md;
    }
    @else if $level == md {
      box-shadow: $shadow-lg;
    }
    @else if $level == lg {
      box-shadow: $shadow-xl;
    }
    @else if $level == xl {
      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
    }
  }
}

// Animations
// --------------------------------------------------------------------------
@mixin fade-in($duration: $transition-base) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-base) {
  animation: slideUp $duration ease-out;
}

// Utilities
// --------------------------------------------------------------------------
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-outline($color: $color-primary) {
  outline: 2px solid $color;
  outline-offset: 2px;
}

// Container
// --------------------------------------------------------------------------
@mixin container($max-width: map-get($container-max-widths, xl)) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-md;

  @include respond-to(sm) {
    padding: 0 $spacing-lg;
  }
}
